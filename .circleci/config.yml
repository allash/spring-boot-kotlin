version: 2
jobs:
  backend_build:
    docker:
      - image: circleci/openjdk:11-jdk

      - image: postgres:9.6.8
        command: postgres -p 4005
        environment:
          - POSTGRES_USER=piperbike
          - POSTGRES_PASSWORD=piperbike
          - POSTGRES_DB=piperbike_test

    working_directory: ~/piperbike

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:4005 -timeout 1m

      #- run: gradle test

      - persist_to_workspace:
          root: ~/workspace
          paths:
            - piperbike

  backend_deploy:
    build:
      machine: true

    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/piperbike

    steps:
      - checkout

      - run: mkdir -p /home/circleci/workspace

      - attach_workspace:
          at: /home/circleci/workspace

      - setup_remote_docker

      - run:
          name: Deploying
          command: |

            cd /home/circleci/workspace/piperbike
            wget "https://cli-assets.heroku.com/heroku-linux-x64.tar.gz"
            tar xzf heroku-linux-x64.tar.gz
            HEROKU="/home/circleci/piperbike/heroku/bin/heroku"

            echo "Build docker"
            docker build -t piperbike_server .

            export HEROKU_APP="piperbike"

            if [[ ! -z "$HEROKU_APP" ]]; then

              echo "Will deploy to $HEROKU_APP"
              docker tag piperbike_server registry.heroku.com/$HEROKU_APP/web

              echo "container login"
              $HEROKU container:login

              echo "docker push"
              docker push registry.heroku.com/$HEROKU_APP/web

              echo "container release"
              $HEROKU container:release web

            fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - backend_build
      - backend_deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - backend_build
